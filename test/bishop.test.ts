import test from 'ava'
import { computeMovesAsStringBoard } from './testUtils.js'

test('bishop captures and blocked squares', t => {
	const board = [
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", "p", "P", "P", " ", " "],
		[" ", " ", " ", " ", "_b", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "]
	]

	const actual = computeMovesAsStringBoard(board)

	const expected = [
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", "p", "P", "x", " ", " "],
		[" ", " ", " ", " ", "b", " ", " ", " "],
		[" ", " ", " ", "x", " ", "x", " ", " "],
		[" ", " ", "x", " ", " ", " ", "x", " "],
		[" ", "x", " ", " ", " ", " ", " ", "x"]
	]

	t.deepEqual(actual, expected)
})

test('bishop at corner has only in-bounds moves', t => {
	const board = [
		["_b", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "]
	]

	const actual = computeMovesAsStringBoard(board)

	const expected = [
		["b", " ", " ", " ", " ", " ", " ", " "],
		[" ", "x", " ", " ", " ", " ", " ", " "],
		[" ", " ", "x", " ", " ", " ", " ", " "],
		[" ", " ", " ", "x", " ", " ", " ", " "],
		[" ", " ", " ", " ", "x", " ", " ", " "],
		[" ", " ", " ", " ", " ", "x", " ", " "],
		[" ", " ", " ", " ", " ", " ", "x", " "],
		[" ", " ", " ", " ", " ", " ", " ", "x"]
	]

	t.deepEqual(actual, expected)
})

test('bishop fully surrounded by allies has no moves', t => {
	const board = [
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", "p", " ", "p", " ", " ", " "],
		[" ", " ", " ", "_b", " ", " ", " ", " "],
		[" ", " ", "p", " ", "p", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "]
	]

	const actual = computeMovesAsStringBoard(board)

	const expected = [
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", "p", " ", "p", " ", " ", " "],
		[" ", " ", " ", "b", " ", " ", " ", " "],
		[" ", " ", "p", " ", "p", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "]
	]

	t.deepEqual(actual, expected)
})

