import test from 'ava'
import { computeMovesAsStringBoard } from './testUtils.js'

test('queen captures and blocked squares', t => {
	const board = [
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", "P", "P", "P", " ", " "],
		["K", " ", " ", "P", "_q", "P", " ", "k"],
		[" ", " ", " ", "p", " ", "p", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "]
	]

	const actual = computeMovesAsStringBoard(board)

	const expected = [
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", "x", "x", "x", " ", " "],
		["K", " ", " ", "x", "q", "x", " ", "k"],
		[" ", " ", " ", "p", "x", "p", " ", " "],
		[" ", " ", " ", " ", "x", " ", " ", " "],
		[" ", " ", " ", " ", "x", " ", " ", " "]
	]

	t.deepEqual(actual, expected)
})

test('queen at corner has only in-bounds moves', t => {
	const board = [
		["_q", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", "K", " ", " ", " ", " ", "k", " "]
	]

	const actual = computeMovesAsStringBoard(board)

	const expected = [
		["q", "x", "x", "x", "x", "x", "x", "x"],
		["x", "x", " ", " ", " ", " ", " ", " "],
		["x", " ", "x", " ", " ", " ", " ", " "],
		["x", " ", " ", "x", " ", " ", " ", " "],
		["x", " ", " ", " ", "x", " ", " ", " "],
		["x", " ", " ", " ", " ", "x", " ", " "],
		["x", " ", " ", " ", " ", " ", "x", " "],
		["x", "K", " ", " ", " ", " ", "k", "x"]
	]

	t.deepEqual(actual, expected)
})

test('queen fully surrounded by allies has no moves', t => {
	const board = [
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", "p", "p", "p", " ", " "],
		[" ", " ", "p", "p", "_q", "p", "p", " "],
		[" ", " ", " ", "p", "p", "p", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		["K", " ", " ", " ", " ", " ", " ", "k"]
	]

	const actual = computeMovesAsStringBoard(board)

	const expected = [
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		[" ", " ", " ", "p", "p", "p", " ", " "],
		[" ", " ", "p", "p", "q", "p", "p", " "],
		[" ", " ", " ", "p", "p", "p", " ", " "],
		[" ", " ", " ", " ", " ", " ", " ", " "],
		["K", " ", " ", " ", " ", " ", " ", "k"]
	]

	t.deepEqual(actual, expected)
})

